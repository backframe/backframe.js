diff --git a/dist/deserializer.js b/dist/deserializer.js
index 6307eddcf47e7df66e1aa6b03b1de2f5ecd56c7a..7a6aca9aa75d88111380673020d6209d282dbddb 100644
--- a/dist/deserializer.js
+++ b/dist/deserializer.js
@@ -71,7 +71,7 @@ function handleFields(fields) {
     }).join('\n');
 }
 function handleIdFields(idFields) {
-    return idFields.length > 0 ? `@@id([${idFields.join(', ')}])` : '';
+    return idFields?.length > 0 ? `@@id([${idFields.join(', ')}])` : '';
 }
 function handleUniqueFieds(uniqueFields) {
     return uniqueFields.length > 0 ? uniqueFields.map(eachUniqueField => `@@unique([${eachUniqueField.join(', ')}])`).join('\n') : '';
diff --git a/dist/transformer.js b/dist/transformer.js
index d2a226e8ebecd29ca8cd411f94a791482d9a4d68..2601630377a742e6d6bf241b3c6e941994826c6d 100644
--- a/dist/transformer.js
+++ b/dist/transformer.js
@@ -51,7 +51,7 @@ function transformModel(model) {
         }
     });
     const fixIdFieldsName = immer_1.produce(fixUniqueName, draftModel => {
-        if (idFields.length > 0) {
+        if (idFields?.length > 0) {
             draftModel.idFields = idFields.map(eachIdField => camelcase(eachIdField));
         }
     });