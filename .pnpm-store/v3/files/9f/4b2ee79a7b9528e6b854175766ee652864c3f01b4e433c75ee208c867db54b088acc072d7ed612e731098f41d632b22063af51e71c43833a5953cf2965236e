{
  "version": 3,
  "sources": ["../../../src/common/utils/getInternalDatamodelJson.ts"],
  "sourcesContent": ["import path from 'path'\nimport { spawn } from 'child_process'\nimport byline from '../../tools/byline'\n\nexport function getInternalDatamodelJson(\n  datamodel: string,\n  schemaInferrerPath: string = path.join(__dirname, '../schema-inferrer-bin'),\n): Promise<string> {\n  return new Promise((resolve, reject) => {\n    const proc = spawn(schemaInferrerPath, {\n      stdio: ['pipe', 'pipe', process.stderr],\n    })\n\n    proc.on('error', function (err) {\n      console.error('[schema-inferrer-bin] error: %s', err)\n      reject(err)\n    })\n\n    proc.on('exit', function (code, signal) {\n      if (code !== 0) {\n        console.error(\n          '[schema-inferrer-bin] exit: code=%s signal=%s',\n          code,\n          signal,\n        )\n      }\n      reject()\n    })\n\n    const out = byline(proc.stdout)\n    out.on('data', (line) => {\n      const result = JSON.parse(line)\n      const resultB64 = Buffer.from(JSON.stringify(result)).toString('base64')\n      resolve(resultB64)\n    })\n\n    const cut = datamodel.replace(/\\n/g, ' ')\n\n    proc.stdin.write(JSON.stringify({ dataModel: cut }) + '\\n')\n  })\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA,kBAAiB;AACjB,2BAAsB;AACtB,oBAAmB;AAEZ,kCACL,WACA,qBAA6B,oBAAK,KAAK,WAAW,2BACjC;AACjB,SAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACtC,UAAM,OAAO,gCAAM,oBAAoB;AAAA,MACrC,OAAO,CAAC,QAAQ,QAAQ,QAAQ;AAAA;AAGlC,SAAK,GAAG,SAAS,SAAU,KAAK;AAC9B,cAAQ,MAAM,mCAAmC;AACjD,aAAO;AAAA;AAGT,SAAK,GAAG,QAAQ,SAAU,MAAM,QAAQ;AACtC,UAAI,SAAS,GAAG;AACd,gBAAQ,MACN,iDACA,MACA;AAAA;AAGJ;AAAA;AAGF,UAAM,MAAM,2BAAO,KAAK;AACxB,QAAI,GAAG,QAAQ,CAAC,SAAS;AACvB,YAAM,SAAS,KAAK,MAAM;AAC1B,YAAM,YAAY,OAAO,KAAK,KAAK,UAAU,SAAS,SAAS;AAC/D,cAAQ;AAAA;AAGV,UAAM,MAAM,UAAU,QAAQ,OAAO;AAErC,SAAK,MAAM,MAAM,KAAK,UAAU,EAAE,WAAW,SAAS;AAAA;AAAA;",
  "names": []
}
