{"version":3,"sources":["../../src/spack/index.ts"],"sourcesContent":["import { bundle } from '@swc/core';\nimport { mkdir, writeFile } from 'fs';\nimport { basename, dirname, extname, join, relative } from 'path'\nimport { promisify } from 'util';\n\nimport parseSpackArgs from './options';\n\nconst write = promisify(writeFile);\nconst makeDir = promisify(mkdir);\n\n\n(async () => {\n    const { spackOptions } = await parseSpackArgs(process.argv);\n\n    function isUserDefinedEntry(name: string) {\n        if (typeof spackOptions.entry === 'string') {\n            return spackOptions.entry === name\n        }\n        if (Array.isArray(spackOptions.entry)) {\n            for (const e of spackOptions.entry) {\n                if (e === name) {\n                    return true;\n                }\n            }\n            return false;\n        }\n\n        return name in spackOptions.entry;\n    }\n\n\n    async function build() {\n        const bundleStart = process.hrtime();\n        const output = await bundle(spackOptions);\n        const bundleEnd = process.hrtime(bundleStart);\n        console.info(`Bundling done: ${bundleEnd[0]}s ${bundleEnd[1] / 1000000}ms`);\n\n        const emitStart = process.hrtime();\n        if (spackOptions.output?.path) {\n            await Object.keys(output).map(async (name) => {\n                let fullPath = '';\n                if (isUserDefinedEntry(name)) {\n                    fullPath = join(spackOptions.output.path, spackOptions.output.name.replace('[name]', name));\n                } else {\n                    const ext = extname(name);\n                    const base = basename(name, ext);\n                    const filename = relative(process.cwd(), name);\n                    fullPath = join(spackOptions.output.path, dirname(filename), `${base}.js`)\n                }\n\n                await makeDir(dirname(fullPath), { recursive: true });\n                await write(fullPath, output[name].code, 'utf-8');\n                if (output[name].map) {\n                    await write(`${fullPath}.map`, output[name].map, 'utf-8')\n                }\n            });\n        } else {\n            throw new Error('Cannot print to stdout: not implemented yet')\n        }\n        const emitEnd = process.hrtime(emitStart);\n        console.info(`Done: ${emitEnd[0]}s ${emitEnd[1] / 1000000}ms`);\n\n    }\n\n    // if (cliOptions.watch) {\n    //     throw new Error('watch is not implemented yet')\n    // }\n\n    await build();\n})()"],"names":["write","promisify","writeFile","makeDir","mkdir","spackOptions","parseSpackArgs","process","argv","isUserDefinedEntry","name","entry","Array","isArray","e","build","bundleStart","hrtime","output","bundle","bundleEnd","console","info","emitStart","path","Object","keys","map","fullPath","join","replace","ext","extname","base","basename","filename","relative","cwd","dirname","recursive","code","Error","emitEnd"],"mappings":"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"}