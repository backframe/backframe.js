{"version":3,"sources":["../../src/swc/options.ts"],"sourcesContent":["import commander from \"commander\";\nimport { DEFAULT_EXTENSIONS, version as swcCoreVersion } from \"@swc/core\";\nimport type { Options } from \"@swc/core\";\n\nconst pkg = require(\"../../package.json\");\n\nlet program: commander.Command;\n\nexport const initProgram = () => {\n  program = new commander.Command();\n\n  /* istanbul ignore next */\n  if (process.env.NODE_ENV === \"test\") {\n    program.exitOverride();\n  }\n\n  program.option(\n    \"-f, --filename [filename]\",\n    \"filename to use when reading from stdin - this will be used in source-maps, errors etc\"\n  );\n\n  program.option(\"--config-file [path]\", \"Path to a .swcrc file to use\");\n\n  program.option(\n    \"--env-name [name]\",\n    \"The name of the 'env' to use when loading configs and plugins. \" +\n      \"Defaults to the value of SWC_ENV, or else NODE_ENV, or else 'development'.\"\n  );\n\n  program.option(\"--no-swcrc\", \"Whether or not to look up .swcrc files\");\n\n  program.option(\n    \"--delete-dir-on-start\",\n    \"Whether or not delete output directory on start\"\n  );\n\n  program.option(\n    \"--ignore [list]\",\n    \"list of glob paths to **not** compile\",\n    collect\n  );\n\n  program.option(\n    \"--only [list]\",\n    \"list of glob paths to **only** compile\",\n    collect\n  );\n\n  program.option(\"-w, --watch\", \"Recompile files on changes\");\n\n  program.option(\"-q, --quiet\", \"Suppress compilation output\");\n\n  program.option(\n    \"-s, --source-maps [true|false|inline|both]\",\n    \"generate source maps\",\n    unstringify\n  );\n\n  program.option(\n    \"--source-map-target [string]\",\n    \"set `file` on returned source map\"\n  );\n\n  program.option(\n    \"--source-file-name [string]\",\n    \"set `sources[0]` on returned source map\"\n  );\n\n  program.option(\n    \"--source-root [filename]\",\n    \"the root from which all sources are relative\"\n  );\n\n  program.option(\n    \"-o, --out-file [out]\",\n    \"Compile all input files into a single file\"\n  );\n\n  program.option(\n    \"-d, --out-dir [out]\",\n    \"Compile an input directory of modules into an output directory\"\n  );\n\n  program.option(\n    \"-D, --copy-files\",\n    \"When compiling a directory copy over non-compilable files\"\n  );\n  program.option(\n    \"--include-dotfiles\",\n    \"Include dotfiles when compiling and copying non-compilable files\"\n  );\n\n  program.option(\n    \"-C, --config <config>\",\n    \"Override a config from .swcrc file. e.g. -C module.type=amd -C module.moduleId=hello\",\n    collect\n  );\n\n  program.option(\n    \"--sync\",\n    \"Invoke swc synchronously. Useful for debugging.\",\n    collect\n  );\n\n  program.option(\n    \"--log-watch-compilation\",\n    \"Log a message when a watched file is successfully compiled\",\n    true\n  );\n\n  program.option(\"--extensions [list]\", \"Use specific extensions\", collect);\n\n  program.version(`\n@swc/cli: ${pkg.version}\n@swc/core: ${swcCoreVersion}\n`);\n\n  program.usage(\"[options] <files ...>\");\n  program.addHelpText(\n    \"beforeAll\",\n    `\n============================================================================================\nBeta version of @swc/cli is now available via 'swcx' command.\nThis'll be a default command for @swc/cli@1.\nPlease give it a try and report any issues at https://github.com/swc-project/swc/issues/4017\n============================================================================================\n\n`\n  );\n};\n\nfunction unstringify(val: string): any {\n  try {\n    return JSON.parse(val);\n  } catch {\n    return val;\n  }\n}\n\nfunction collect(\n  value: string,\n  previousValue?: string[]\n): string[] | undefined {\n  // If the user passed the option with no value, like \"babel file.js --presets\", do nothing.\n  /* istanbul ignore next */\n  if (typeof value !== \"string\") return previousValue;\n\n  const values = value.split(\",\");\n\n  return previousValue ? previousValue.concat(values) : values;\n}\n\nexport interface CliOptions {\n  readonly outDir: string;\n  readonly outFile: string;\n  /**\n   * Invoke swc using transformSync. It's useful for debugging.\n   */\n  readonly sync: boolean;\n  readonly sourceMapTarget?: string;\n  readonly filename: string;\n  readonly filenames: string[];\n  readonly extensions: string[];\n  readonly watch: boolean;\n  readonly copyFiles: boolean;\n  readonly includeDotfiles: boolean;\n  readonly deleteDirOnStart: boolean;\n  readonly quiet: boolean;\n}\n\nexport default function parserArgs(args: string[]) {\n  program.parse(args);\n  const opts = program.opts();\n\n  const filenames = program.args;\n  const errors = [];\n\n  if (opts.outDir && !filenames.length) {\n    errors.push(\"--out-dir requires filenames\");\n  }\n\n  if (opts.outFile && opts.outDir) {\n    errors.push(\"--out-file and --out-dir cannot be used together\");\n  }\n\n  if (opts.watch) {\n    if (!opts.outFile && !opts.outDir) {\n      errors.push(\"--watch requires --out-file or --out-dir\");\n    }\n\n    if (!filenames.length) {\n      errors.push(\"--watch requires filenames\");\n    }\n  }\n\n  if (\n    !opts.outDir &&\n    filenames.length === 0 &&\n    typeof opts.filename !== \"string\" &&\n    opts.swcrc !== false\n  ) {\n    errors.push(\n      \"stdin compilation requires either -f/--filename [filename] or --no-swcrc\"\n    );\n  }\n\n  if (errors.length) {\n    console.error(\"swc:\");\n    for (const error of errors) {\n      console.error(\"  \" + error);\n    }\n    process.exit(2);\n  }\n\n  const swcOptions: Options = {\n    jsc: {\n      parser: undefined,\n      transform: {},\n    },\n    sourceFileName: opts.sourceFileName,\n    sourceRoot: opts.sourceRoot,\n    configFile: opts.configFile,\n    swcrc: opts.swcrc,\n  };\n\n  if (opts.sourceMaps !== undefined) {\n    swcOptions.sourceMaps = opts.sourceMaps;\n  }\n\n  if (opts.config) {\n    for (const cfg of opts.config as string[]) {\n      const i = cfg.indexOf(\"=\");\n      let key: string;\n      let value: any;\n      if (i === -1) {\n        key = cfg;\n        value = true;\n      } else {\n        key = cfg.substring(0, i);\n        value = unstringify(cfg.substring(i + 1));\n      }\n      // https://github.com/swc-project/cli/issues/45\n      let options = swcOptions as { [key: string]: any };\n      const keyParts = key.split(\".\");\n      const lastIndex = keyParts.length - 1;\n      for (const [index, keyPart] of keyParts.entries()) {\n        if (options[keyPart] === undefined && index !== lastIndex) {\n          options[keyPart] = {};\n        }\n        if (index === lastIndex) {\n          options[keyPart] = value;\n        } else {\n          options = options[keyPart];\n        }\n      }\n    }\n  }\n\n  const cliOptions: CliOptions = {\n    outDir: opts.outDir,\n    outFile: opts.outFile,\n    filename: opts.filename,\n    filenames,\n    sync: !!opts.sync,\n    sourceMapTarget: opts.sourceMapTarget,\n    extensions: opts.extensions || DEFAULT_EXTENSIONS,\n    watch: !!opts.watch,\n    copyFiles: !!opts.copyFiles,\n    includeDotfiles: !!opts.includeDotfiles,\n    deleteDirOnStart: Boolean(opts.deleteDirOnStart),\n    quiet: !!opts.quiet,\n  };\n  return {\n    swcOptions,\n    cliOptions,\n  };\n}\n"],"names":["parserArgs","args","program","parse","opts","filenames","errors","outDir","length","push","outFile","watch","filename","swcrc","console","error","process","exit","swcOptions","jsc","parser","undefined","transform","sourceFileName","sourceRoot","configFile","sourceMaps","config","cfg","i","indexOf","key","value","substring","unstringify","options","keyParts","split","lastIndex","index","keyPart","entries","cliOptions","sync","sourceMapTarget","extensions","DEFAULT_EXTENSIONS","copyFiles","includeDotfiles","deleteDirOnStart","Boolean","quiet","pkg","require","initProgram","commander","Command","env","NODE_ENV","exitOverride","option","collect","version","swcCoreVersion","usage","addHelpText","val","JSON","previousValue","values","concat"],"mappings":"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"}