{
  "version": 3,
  "sources": ["../src/generatorHandler.ts"],
  "sourcesContent": ["import {\n  GeneratorOptions,\n  GeneratorManifest,\n  JsonRPC,\n  GeneratorConfig,\n} from './types'\nimport byline from './byline'\n\nexport interface Handler {\n  onGenerate(options: GeneratorOptions): Promise<any>\n  onManifest?(config: GeneratorConfig): GeneratorManifest\n}\n\nexport function generatorHandler(handler: Handler): void {\n  byline(process.stdin).on('data', async (line) => {\n    const json = JSON.parse(String(line))\n\n    if (json.method === 'generate' && json.params) {\n      try {\n        const result = await handler.onGenerate(json.params)\n        respond({\n          jsonrpc: '2.0',\n          result: result,\n          id: json.id,\n        })\n      } catch (e) {\n        respond({\n          jsonrpc: '2.0',\n          error: {\n            code: -32000,\n            message: e.stack || e.message,\n            data: null,\n          },\n          id: json.id,\n        })\n      }\n    }\n\n    if (json.method === 'getManifest') {\n      if (handler.onManifest) {\n        try {\n          const manifest = handler.onManifest(json.params)\n          respond({\n            jsonrpc: '2.0',\n            result: {\n              manifest,\n            },\n            id: json.id,\n          })\n        } catch (e) {\n          respond({\n            jsonrpc: '2.0',\n            error: {\n              code: -32000,\n              message: e.stack || e.message,\n              data: null,\n            },\n            id: json.id,\n          })\n        }\n      } else {\n        respond({\n          jsonrpc: '2.0',\n          result: {\n            manifest: null,\n          },\n          id: json.id,\n        })\n      }\n    }\n  })\n\n  process.stdin.resume()\n}\n\nfunction respond(response: JsonRPC.Response): void {\n  console.error(JSON.stringify(response))\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAMA,oBAAmB;AAOZ,0BAA0B,SAAwB;AACvD,6BAAO,QAAQ,OAAO,GAAG,QAAQ,OAAO,SAAS;AAC/C,UAAM,OAAO,KAAK,MAAM,OAAO;AAE/B,QAAI,KAAK,WAAW,cAAc,KAAK,QAAQ;AAC7C,UAAI;AACF,cAAM,SAAS,MAAM,QAAQ,WAAW,KAAK;AAC7C,gBAAQ;AAAA,UACN,SAAS;AAAA,UACT;AAAA,UACA,IAAI,KAAK;AAAA;AAAA,eAEJ,GAAP;AACA,gBAAQ;AAAA,UACN,SAAS;AAAA,UACT,OAAO;AAAA,YACL,MAAM;AAAA,YACN,SAAS,EAAE,SAAS,EAAE;AAAA,YACtB,MAAM;AAAA;AAAA,UAER,IAAI,KAAK;AAAA;AAAA;AAAA;AAKf,QAAI,KAAK,WAAW,eAAe;AACjC,UAAI,QAAQ,YAAY;AACtB,YAAI;AACF,gBAAM,WAAW,QAAQ,WAAW,KAAK;AACzC,kBAAQ;AAAA,YACN,SAAS;AAAA,YACT,QAAQ;AAAA,cACN;AAAA;AAAA,YAEF,IAAI,KAAK;AAAA;AAAA,iBAEJ,GAAP;AACA,kBAAQ;AAAA,YACN,SAAS;AAAA,YACT,OAAO;AAAA,cACL,MAAM;AAAA,cACN,SAAS,EAAE,SAAS,EAAE;AAAA,cACtB,MAAM;AAAA;AAAA,YAER,IAAI,KAAK;AAAA;AAAA;AAAA,aAGR;AACL,gBAAQ;AAAA,UACN,SAAS;AAAA,UACT,QAAQ;AAAA,YACN,UAAU;AAAA;AAAA,UAEZ,IAAI,KAAK;AAAA;AAAA;AAAA;AAAA;AAMjB,UAAQ,MAAM;AAAA;AAGhB,iBAAiB,UAAkC;AACjD,UAAQ,MAAM,KAAK,UAAU;AAAA;",
  "names": []
}
