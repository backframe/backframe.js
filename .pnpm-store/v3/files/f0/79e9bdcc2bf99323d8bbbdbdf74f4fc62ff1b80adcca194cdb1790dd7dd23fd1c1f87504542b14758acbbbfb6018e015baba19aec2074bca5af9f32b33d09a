{
  "version": 3,
  "sources": ["../../src/utils/trimBlocksFromSchema.ts"],
  "sourcesContent": ["export type Position = {\n  start: number\n  end: number\n}\n\nexport function trimNewLine(str: string): string {\n  if (str === '') {\n    return str\n  }\n  let newStr = str\n  if (/\\r?\\n|\\r/.exec(newStr[0])) {\n    newStr = newStr.slice(1)\n  }\n  if (newStr.length > 0 && /\\r?\\n|\\r/.exec(newStr[newStr.length - 1])) {\n    newStr = newStr.slice(0, newStr.length - 1)\n  }\n  return newStr\n}\n\nexport function trimBlocksFromSchema(\n  str: string,\n  blocks = ['model', 'enum', 'datasource', 'generator'],\n): string {\n  const lines = str.split('\\n')\n  if (lines.length <= 2) {\n    return str\n  }\n  const modelPositions: Position[] = []\n  let blockOpen = false\n  let currentStart = -1\n\n  lines.forEach((line, index) => {\n    const trimmed = line.trim()\n    if (blocks.some((b) => line.startsWith(b)) && line.endsWith('{')) {\n      blockOpen = true\n      currentStart = index\n    }\n    if (trimmed.endsWith('}') && currentStart > -1 && blockOpen) {\n      modelPositions.push({\n        start: currentStart,\n        end: index,\n      })\n      blockOpen = false\n      currentStart = -1\n    }\n  })\n\n  if (modelPositions.length === 0) {\n    return str\n  }\n\n  return trimNewLine(\n    modelPositions\n      .reduceRight((acc, position) => {\n        acc.splice(position.start, position.end - position.start + 1)\n        return acc\n      }, lines)\n      .join('\\n'),\n  )\n}\n"],
  "mappings": ";;;;;;;AAAA;AAAA;AAAA;AAAA;AAKO,qBAAqB,KAAqB;AAC/C,MAAI,QAAQ,IAAI;AACd,WAAO;AAAA;AAET,MAAI,SAAS;AACb,MAAI,WAAW,KAAK,OAAO,KAAK;AAC9B,aAAS,OAAO,MAAM;AAAA;AAExB,MAAI,OAAO,SAAS,KAAK,WAAW,KAAK,OAAO,OAAO,SAAS,KAAK;AACnE,aAAS,OAAO,MAAM,GAAG,OAAO,SAAS;AAAA;AAE3C,SAAO;AAAA;AAGF,8BACL,KACA,SAAS,CAAC,SAAS,QAAQ,cAAc,cACjC;AACR,QAAM,QAAQ,IAAI,MAAM;AACxB,MAAI,MAAM,UAAU,GAAG;AACrB,WAAO;AAAA;AAET,QAAM,iBAA6B;AACnC,MAAI,YAAY;AAChB,MAAI,eAAe;AAEnB,QAAM,QAAQ,CAAC,MAAM,UAAU;AAC7B,UAAM,UAAU,KAAK;AACrB,QAAI,OAAO,KAAK,CAAC,MAAM,KAAK,WAAW,OAAO,KAAK,SAAS,MAAM;AAChE,kBAAY;AACZ,qBAAe;AAAA;AAEjB,QAAI,QAAQ,SAAS,QAAQ,eAAe,MAAM,WAAW;AAC3D,qBAAe,KAAK;AAAA,QAClB,OAAO;AAAA,QACP,KAAK;AAAA;AAEP,kBAAY;AACZ,qBAAe;AAAA;AAAA;AAInB,MAAI,eAAe,WAAW,GAAG;AAC/B,WAAO;AAAA;AAGT,SAAO,YACL,eACG,YAAY,CAAC,KAAK,aAAa;AAC9B,QAAI,OAAO,SAAS,OAAO,SAAS,MAAM,SAAS,QAAQ;AAC3D,WAAO;AAAA,KACN,OACF,KAAK;AAAA;",
  "names": []
}
