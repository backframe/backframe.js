{
  "version": 3,
  "sources": ["../../../src/common/utils/util.ts"],
  "sourcesContent": ["import fs from 'fs'\nimport { Platform } from '@prisma/get-platform'\nimport { BinaryTargetsEnvValue } from '@prisma/generator-helper'\nimport terminalLink from 'terminal-link'\nimport newGithubIssueUrl from 'new-github-issue-url'\nimport chalk from 'chalk'\nimport Debug from '@prisma/debug'\nimport crypto from 'crypto'\n\nconst debug = Debug('plusX')\n\nexport function plusX(file): void {\n  const s = fs.statSync(file)\n  const newMode = s.mode | 64 | 8 | 1\n  if (s.mode === newMode) {\n    debug(`Execution permissions of ${file} are fine`)\n    return\n  }\n  const base8 = newMode.toString(8).slice(-3)\n  debug(`Have to call plusX on ${file}`)\n  fs.chmodSync(file, base8)\n}\n\nfunction transformPlatformToEnvValue(\n  platform: Platform | string,\n): BinaryTargetsEnvValue {\n  return { fromEnvVar: null, value: platform }\n}\n\nexport function fixBinaryTargets(\n  binaryTargets: BinaryTargetsEnvValue[],\n  platform: Platform | string,\n): BinaryTargetsEnvValue[] {\n  binaryTargets = binaryTargets || []\n\n  if (!binaryTargets.find((object) => object.value === 'native')) {\n    return [transformPlatformToEnvValue('native'), ...binaryTargets]\n  }\n\n  return [...binaryTargets, transformPlatformToEnvValue(platform)]\n}\n\nexport function link(url: string): string {\n  return terminalLink(url, url, {\n    fallback: (url) => chalk.underline(url),\n  })\n}\n\nexport function getGithubIssueUrl({\n  title,\n  user = 'prisma',\n  repo = 'prisma',\n  template = 'bug_report.md',\n  body,\n}: {\n  title: string\n  user?: string\n  repo?: string\n  template?: string\n  body?: string\n}): string {\n  return newGithubIssueUrl({\n    user,\n    repo,\n    template,\n    title,\n    body,\n  })\n}\n\nexport function getRandomString() {\n  return crypto.randomBytes(12).toString('hex')\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAe;AAGf,2BAAyB;AACzB,kCAA8B;AAC9B,mBAAkB;AAClB,mBAAkB;AAClB,oBAAmB;AAEnB,MAAM,QAAQ,0BAAM;AAEb,eAAe,MAAY;AAChC,QAAM,IAAI,kBAAG,SAAS;AACtB,QAAM,UAAU,EAAE,OAAO,KAAK,IAAI;AAClC,MAAI,EAAE,SAAS,SAAS;AACtB,UAAM,4BAA4B;AAClC;AAAA;AAEF,QAAM,QAAQ,QAAQ,SAAS,GAAG,MAAM;AACxC,QAAM,yBAAyB;AAC/B,oBAAG,UAAU,MAAM;AAAA;AAGrB,qCACE,UACuB;AACvB,SAAO,EAAE,YAAY,MAAM,OAAO;AAAA;AAG7B,0BACL,eACA,UACyB;AACzB,kBAAgB,iBAAiB;AAEjC,MAAI,CAAC,cAAc,KAAK,CAAC,WAAW,OAAO,UAAU,WAAW;AAC9D,WAAO,CAAC,4BAA4B,WAAW,GAAG;AAAA;AAGpD,SAAO,CAAC,GAAG,eAAe,4BAA4B;AAAA;AAGjD,cAAc,KAAqB;AACxC,SAAO,kCAAa,KAAK,KAAK;AAAA,IAC5B,UAAU,CAAC,SAAQ,qBAAM,UAAU;AAAA;AAAA;AAIhC,2BAA2B;AAAA,EAChC;AAAA,EACA,OAAO;AAAA,EACP,OAAO;AAAA,EACP,WAAW;AAAA,EACX;AAAA,GAOS;AACT,SAAO,yCAAkB;AAAA,IACvB;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA;AAAA;AAIG,2BAA2B;AAChC,SAAO,sBAAO,YAAY,IAAI,SAAS;AAAA;",
  "names": []
}
