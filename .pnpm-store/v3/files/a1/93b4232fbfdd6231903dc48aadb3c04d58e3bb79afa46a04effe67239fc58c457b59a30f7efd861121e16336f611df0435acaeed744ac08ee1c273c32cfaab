{
  "version": 3,
  "sources": ["../src/node.ts"],
  "sourcesContent": ["// from https://github.com/visionmedia/debug/blob/master/src/node.js\n/**\n * Module dependencies.\n */\n\nconst tty = require('tty')\nconst util = require('util')\n\n/**\n * This is the Node.js implementation of `debug()`.\n */\n\nexports.init = init\nexports.log = log\nexports.formatArgs = formatArgs\nexports.save = save\nexports.load = load\nexports.useColors = useColors\nexports.destroy = util.deprecate(() => {},\n'Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.')\n\n/**\n * Colors.\n */\n\nexports.colors = [6, 2, 3, 4, 5, 1]\n\ntry {\n  // Optional dependency (as in, doesn't need to be installed, NOT like optionalDependencies in package.json)\n  const supportsColor = require('supports-color')\n\n  if (supportsColor && (supportsColor.stderr || supportsColor).level >= 2) {\n    exports.colors = [\n      20, 21, 26, 27, 32, 33, 38, 39, 40, 41, 42, 43, 44, 45, 56, 57, 62, 63,\n      68, 69, 74, 75, 76, 77, 78, 79, 80, 81, 92, 93, 98, 99, 112, 113, 128,\n      129, 134, 135, 148, 149, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169,\n      170, 171, 172, 173, 178, 179, 184, 185, 196, 197, 198, 199, 200, 201, 202,\n      203, 204, 205, 206, 207, 208, 209, 214, 215, 220, 221,\n    ]\n  }\n} catch (error) {\n  // Swallow - we only care if `supports-color` is available; it doesn't have to be.\n}\n\n/**\n * Build up the default `inspectOpts` object from the environment variables.\n *\n *   $ DEBUG_COLORS=no DEBUG_DEPTH=10 DEBUG_SHOW_HIDDEN=enabled node script.js\n */\n\nexports.inspectOpts = Object.keys(process.env)\n  .filter((key) => {\n    return /^debug_/i.test(key)\n  })\n  .reduce((obj, key) => {\n    // Camel-case\n    const prop = key\n      .substring(6)\n      .toLowerCase()\n      .replace(/_([a-z])/g, (_, k) => {\n        return k.toUpperCase()\n      })\n\n    // Coerce string value into JS value\n    let val: any = process.env[key]!\n    if (/^(yes|on|true|enabled)$/i.test(val)) {\n      val = true\n    } else if (/^(no|off|false|disabled)$/i.test(val)) {\n      val = false\n    } else if (val === 'null') {\n      val = null\n    } else {\n      val = Number(val)\n    }\n\n    obj[prop] = val\n    return obj\n  }, {})\n\n/**\n * Is stdout a TTY? Colored output is enabled when `true`.\n */\n\nfunction useColors() {\n  return 'colors' in exports.inspectOpts\n    ? Boolean(exports.inspectOpts.colors)\n    : tty.isatty((process.stderr as any).fd)\n}\n\n/**\n * Adds ANSI color escape codes if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(this, args) {\n  const { namespace: name, useColors } = this\n\n  if (useColors) {\n    const c = this.color\n    const colorCode = '\\u001B[3' + (c < 8 ? c : '8;5;' + c)\n    const prefix = `  ${colorCode};1m${name} \\u001B[0m`\n\n    args[0] = prefix + args[0].split('\\n').join('\\n' + prefix)\n    args.push(\n      colorCode + 'm+' + module.exports.humanize(this.diff) + '\\u001B[0m',\n    )\n  } else {\n    args[0] = getDate() + name + ' ' + args[0]\n  }\n}\n\nfunction getDate() {\n  if (exports.inspectOpts.hideDate) {\n    return ''\n  }\n  return new Date().toISOString() + ' '\n}\n\n/**\n * Invokes `util.format()` with the specified arguments and writes to stderr.\n */\n\nfunction log(...args) {\n  return process.stderr.write(util.format(...args) + '\\n')\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n  if (namespaces) {\n    process.env.DEBUG = namespaces\n  } else {\n    // If you set a process.env field to null or undefined, it gets cast to the\n    // string 'null' or 'undefined'. Just delete instead.\n    delete process.env.DEBUG\n  }\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  return process.env.DEBUG\n}\n\n/**\n * Init logic for `debug` instances.\n *\n * Create a new `inspectOpts` object in case `useColors` is set\n * differently for a particular `debug` instance.\n */\n\nfunction init(debug) {\n  debug.inspectOpts = {}\n\n  const keys = Object.keys(exports.inspectOpts)\n  for (let i = 0; i < keys.length; i++) {\n    debug.inspectOpts[keys[i]] = exports.inspectOpts[keys[i]]\n  }\n}\n\nimport { setup } from './common'\nconst mod = setup(exports)\nmodule.exports = mod\nexport default mod\n\nconst { formatters } = mod\n\n/**\n * Map %o to `util.inspect()`, all on a single line.\n */\n\nformatters.o = function (v) {\n  this.inspectOpts.colors = this.useColors\n  return util\n    .inspect(v, this.inspectOpts)\n    .split('\\n')\n    .map((str) => str.trim())\n    .join(' ')\n}\n\n/**\n * Map %O to `util.inspect()`, allowing multiple lines if needed.\n */\n\nformatters.O = function (v) {\n  this.inspectOpts.colors = this.useColors\n  return util.inspect(v, this.inspectOpts)\n}\n"],
  "mappings": "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",
  "names": []
}
