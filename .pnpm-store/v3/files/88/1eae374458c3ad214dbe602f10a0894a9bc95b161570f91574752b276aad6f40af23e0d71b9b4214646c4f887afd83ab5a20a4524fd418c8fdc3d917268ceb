{
  "version": 3,
  "sources": ["../src/index.ts"],
  "sourcesContent": ["export {\n  getRelativeSchemaPath,\n  getSchema,\n  getSchemaDir,\n  getSchemaDirSync,\n  getSchemaPath,\n  getSchemaPathFromPackageJson,\n  getSchemaPathFromPackageJsonSync,\n  getSchemaPathSync,\n  getSchemaSync,\n} from './cli/getSchema'\nexport { getCLIPathHash, getProjectHash } from './cli/hashes'\nexport { HelpError, unknownCommand } from './cli/Help'\nexport {\n  Command,\n  Commands,\n  CompiledGeneratorDefinition,\n  Dictionary,\n  GeneratorConfig,\n  GeneratorDefinition,\n  GeneratorDefinitionWithPackage,\n  GeneratorFunction,\n  GeneratorOptions,\n} from './cli/types'\nexport { arg, format, isError } from './cli/utils'\nexport { credentialsToUri, uriToCredentials } from './convertCredentials'\nexport { drawBox } from './drawBox'\nexport * from './engine-commands'\nexport { Generator } from './Generator'\nexport { getCommandWithExecutor } from './getCommandWithExecutor'\nexport { getGenerator, getGenerators, ProviderAliases } from './getGenerators'\nexport { getPackedPackage } from './getPackedPackage'\nexport {\n  highlightDatamodel,\n  highlightSql,\n  highlightTS,\n} from './highlight/highlight'\nexport {\n  IntrospectionEngine,\n  IntrospectionSchemaVersion,\n  IntrospectionWarnings,\n} from './IntrospectionEngine'\nexport { isCi } from './isCi'\nexport { isCurrentBinInstalledGlobally } from './isCurrentBinInstalledGlobally'\nexport { keyBy } from './keyBy'\nexport { link } from './link'\nexport * as logger from './logger'\nexport {\n  canConnectToDatabase,\n  createDatabase,\n  dropDatabase,\n  MigrateEngineExitCode,\n  MigrateEngineLogLine,\n} from './migrateEngineCommands'\nexport { ErrorArea, RustPanic } from './panic'\nexport { pick } from './pick'\nexport { GeneratorPaths } from './predefinedGeneratorResolvers'\nexport { BinaryType, engineEnvVarMap, resolveBinary } from './resolveBinary'\nexport { sendPanic } from './sendPanic'\nexport { DatabaseCredentials } from './types'\nexport { extractPreviewFeatures } from './utils/extractPreviewFeatures'\nexport { getEnvPaths } from './utils/getEnvPaths'\nexport { mapPreviewFeatures } from './utils/mapPreviewFeatures'\nexport { maskSchema } from './utils/maskSchema'\nexport { missingGeneratorMessage } from './utils/missingGeneratorMessage'\nexport {\n  parseBinaryTargetsEnvValue,\n  parseEnvValue,\n} from './utils/parseEnvValue'\nexport { printConfigWarnings } from './utils/printConfigWarnings'\nexport { load } from './utils/load'\nexport {\n  Position,\n  trimBlocksFromSchema,\n  trimNewLine,\n} from './utils/trimBlocksFromSchema'\nexport { tryLoadEnvs } from './utils/tryLoadEnvs'\nexport { Platform, getPlatform, getNodeAPIName } from '@prisma/get-platform'\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAUO;AACP,oBAA+C;AAC/C,kBAA0C;AAC1C,mBAUO;AACP,mBAAqC;AACrC,gCAAmD;AACnD,qBAAwB;AACxB,oBAAc;AACd,uBAA0B;AAC1B,oCAAuC;AACvC,2BAA6D;AAC7D,8BAAiC;AACjC,uBAIO;AACP,iCAIO;AACP,kBAAqB;AACrB,2CAA8C;AAC9C,mBAAsB;AACtB,kBAAqB;AACrB,aAAwB;AACxB,mCAMO;AACP,mBAAqC;AACrC,kBAAqB;AACrB,0CAA+B;AAC/B,2BAA2D;AAC3D,uBAA0B;AAC1B,oBAAoC;AACpC,oCAAuC;AACvC,yBAA4B;AAC5B,gCAAmC;AACnC,wBAA2B;AAC3B,qCAAwC;AACxC,2BAGO;AACP,iCAAoC;AACpC,kBAAqB;AACrB,kCAIO;AACP,yBAA4B;AAC5B,0BAAsD;",
  "names": []
}
