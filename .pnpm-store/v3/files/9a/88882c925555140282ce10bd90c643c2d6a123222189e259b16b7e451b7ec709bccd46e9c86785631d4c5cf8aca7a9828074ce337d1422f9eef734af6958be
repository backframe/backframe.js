{"version":3,"sources":["../../../src/swc/__tests__/options.test.ts"],"sourcesContent":["import type { Options } from \"@swc/core\";\nimport deepmerge from 'deepmerge'\n\nimport parserArgs, { CliOptions, initProgram } from \"../options\";\n\ninterface ParserArgsReturn {\n  swcOptions: Options;\n  cliOptions: CliOptions;\n}\n\nconst createDefaultResult = (): ParserArgsReturn => ({\n  \"cliOptions\": {\n    \"copyFiles\": false,\n    \"deleteDirOnStart\": false,\n    \"extensions\": [\".js\", \".jsx\", \".es6\", \".es\", \".mjs\", \".ts\", \".tsx\"],\n    // @ts-expect-error\n    \"filename\": undefined,\n    \"filenames\": [\"src\"],\n    \"includeDotfiles\": false,\n    // @ts-expect-error\n    \"outDir\": undefined,\n    // @ts-expect-error\n    \"outFile\": undefined,\n    \"quiet\": false,\n    \"sourceMapTarget\": undefined,\n    \"sync\": false,\n    \"watch\": false\n  },\n  \"swcOptions\": {\n    \"configFile\": undefined,\n    \"jsc\": { \"parser\": undefined, \"transform\": {} },\n    \"sourceFileName\": undefined,\n    \"sourceMaps\": undefined,\n    \"sourceRoot\": undefined,\n    \"swcrc\": true\n  }\n})\n\ndescribe('parserArgs', () => {\n  let defaultResult: ParserArgsReturn\n\n  beforeEach(() => {\n    defaultResult = createDefaultResult()\n    initProgram()\n  })\n\n  it(\"minimal args returns default result\", async () => {\n    const args = [\n      'node',\n      '/path/to/node_modules/swc-cli/bin/swc.js',\n      'src'\n    ]\n    const result = await parserArgs(args);\n    expect(result).toEqual(defaultResult);\n  });\n\n  describe('errors', () => {\n    let mockExit: jest.SpyInstance\n    let mockConsoleError: jest.SpyInstance\n\n    beforeAll(() => {\n      //@ts-expect-error\n      mockExit = jest.spyOn(process, 'exit').mockImplementation(() => { });\n      mockConsoleError = jest.spyOn(console, 'error').mockImplementation(() => { });\n    })\n\n    beforeEach(() => {\n      mockExit.mockClear()\n      mockConsoleError.mockClear()\n    })\n\n    afterAll(() => {\n      mockExit.mockRestore()\n      mockConsoleError.mockRestore()\n    })\n\n    it('exits without filenames', async () => {\n      const args = [\n        'node',\n        '/path/to/node_modules/swc-cli/bin/swc.js',\n      ]\n      await parserArgs(args);\n      expect(mockExit).toHaveBeenCalledWith(2);\n      expect(mockConsoleError).toHaveBeenCalledTimes(2);\n    })\n\n    it('--watch exits without --out-dir', async () => {\n      const args = [\n        'node',\n        '/path/to/node_modules/swc-cli/bin/swc.js',\n        'src',\n        '--watch',\n      ]\n      await parserArgs(args);\n      expect(mockExit).toHaveBeenCalledWith(2);\n      expect(mockConsoleError).toHaveBeenCalledTimes(2);\n    })\n\n    it('--watch exits without filenames', async () => {\n      const args = [\n        'node',\n        '/path/to/node_modules/swc-cli/bin/swc.js',\n        '--watch',\n        '--out-dir',\n        'esm'\n      ]\n      await parserArgs(args);\n      expect(mockExit).toHaveBeenCalledWith(2);\n      expect(mockConsoleError).toHaveBeenCalledTimes(3);\n    })\n\n    it('--out-dir exits with conflicting -out-file', async () => {\n      const args = [\n        'node',\n        '/path/to/node_modules/swc-cli/bin/swc.js',\n        'src',\n        '--out-file',\n        'esm/index.js',\n        '--out-dir',\n        'esm'\n      ]\n      await parserArgs(args);\n      expect(mockExit).toHaveBeenCalledWith(2);\n      expect(mockConsoleError).toHaveBeenCalledTimes(2);\n    })\n  })\n\n  describe('--source-maps', () => {\n    it(\"source maps is ambiguous\", async () => {\n      const args = [\n        'node',\n        '/path/to/node_modules/swc-cli/bin/swc.js',\n        'src',\n        '--source-maps'\n      ]\n      const result = await parserArgs(args);\n      const expectedOptions = deepmerge(defaultResult, { swcOptions: { sourceMaps: true } })\n      expect(result).toEqual(expectedOptions);\n    });\n\n    it(\"source maps true\", async () => {\n      const args = [\n        'node',\n        '/path/to/node_modules/swc-cli/bin/swc.js',\n        '--source-maps',\n        'true',\n        'src'\n      ]\n      const result = await parserArgs(args);\n      const expectedOptions = deepmerge(defaultResult, { swcOptions: { sourceMaps: true } })\n      expect(result).toEqual(expectedOptions);\n    });\n\n    it(\"source maps inline\", async () => {\n      const args = [\n        'node',\n        '/path/to/node_modules/swc-cli/bin/swc.js',\n        '-s',\n        'inline',\n        'src'\n      ]\n      const result = await parserArgs(args);\n      const expectedOptions = deepmerge(defaultResult, { swcOptions: { sourceMaps: 'inline' } })\n      expect(result).toEqual(expectedOptions);\n    });\n  });\n\n  describe('--config', () => {\n    it(\"throws with no config\", async () => {\n      const args = [\n        'node',\n        '/path/to/node_modules/swc-cli/bin/swc.js',\n        'src',\n        '-C',\n      ]\n      expect(() => parserArgs(args)).toThrow();\n    });\n\n    it(\"react development\", async () => {\n      const args = [\n        'node',\n        '/path/to/node_modules/swc-cli/bin/swc.js',\n        '--config',\n        'jsc.transform.react.development=true',\n        'src'\n      ]\n      const result = await parserArgs(args);\n      const expectedOptions = deepmerge(defaultResult.swcOptions, {\n        jsc: { transform: { react: { development: true } } }\n      })\n      expect(result.swcOptions).toEqual(expectedOptions);\n    });\n\n    it(\"react development and commonjs (two config options)\", async () => {\n      const args = [\n        'node',\n        '/path/to/node_modules/swc-cli/bin/swc.js',\n        '--config',\n        'jsc.transform.react.development=true',\n        '-C',\n        'module.type=commonjs',\n        'src'\n      ]\n      const result = await parserArgs(args);\n      const expectedOptions = deepmerge(defaultResult.swcOptions, {\n        jsc: { transform: { react: { development: true } } },\n        module: { type: 'commonjs' }\n      })\n      expect(result.swcOptions).toEqual(expectedOptions);\n    });\n\n    it(\"react development and commonjs (comma-separated)\", async () => {\n      const args = [\n        'node',\n        '/path/to/node_modules/swc-cli/bin/swc.js',\n        '--config',\n        'jsc.transform.react.development=true,module.type=commonjs',\n        'src'\n      ]\n      const result = await parserArgs(args);\n      const expectedOptions = deepmerge(defaultResult.swcOptions, {\n        jsc: { transform: { react: { development: true } } },\n        module: { type: 'commonjs' }\n      })\n      expect(result.swcOptions).toEqual(expectedOptions);\n    });\n\n    it(\"no equals sign\", async () => {\n      const args = [\n        'node',\n        '/path/to/node_modules/swc-cli/bin/swc.js',\n        '--config',\n        'no_equals',\n        'src'\n      ]\n      const result = await parserArgs(args);\n      const expectedOptions = deepmerge(defaultResult.swcOptions, {\n        no_equals: true\n      })\n      expect(result.swcOptions).toEqual(expectedOptions);\n    });\n  })\n})\n"],"names":["createDefaultResult","undefined","describe","defaultResult","beforeEach","initProgram","it","args","result","parserArgs","expect","toEqual","mockExit","mockConsoleError","beforeAll","jest","spyOn","process","mockImplementation","console","mockClear","afterAll","mockRestore","toHaveBeenCalledWith","toHaveBeenCalledTimes","expectedOptions","deepmerge","swcOptions","sourceMaps","toThrow","jsc","transform","react","development","module","type","no_equals"],"mappings":"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"}