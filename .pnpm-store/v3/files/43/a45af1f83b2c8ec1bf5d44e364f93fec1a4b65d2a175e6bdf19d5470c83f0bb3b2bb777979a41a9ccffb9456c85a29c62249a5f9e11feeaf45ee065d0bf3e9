{"version":3,"sources":["../../src/swcx/index.ts"],"sourcesContent":["#!/usr/bin/env node\n\nimport minVersion from \"semver/ranges/min-version\";\nimport { existsSync, readFileSync } from \"fs\";\nimport * as path from \"path\";\nimport { spawn, StdioOptions } from \"child_process\";\nconst BinWrapper = require(\"bin-wrapper\");\n\nconst { platform, arch } = process;\n\nconst SWC_CLI_ENV = {\n  // Allow to specify specific version of swc binary version to use\n  SWCX_CORE_VERSION_OVERRIDE: \"SWCX_CORE_VERSION_OVERRIDE\",\n  // Allow to skip check peer @swc/core version check\n  SWCX_SKIP_CORE_VERSION_CHECK: \"SWCX_SKIP_CORE_VERSION_CHECK\",\n};\n\n/**\n * Determines version of the swc cli binary to use.\n *\n * By default, if cwd have a package.json already have dependency to @swc/core\n * will try to match those versions. Otherwise will use the latest\n * version available when @swc/cli is published.\n *\n * If `SWCX_CORE_VERSION_OVERRIDE` is set, both will be ignored and\n * explicitly will try to use the version specified. Note this won't ceck\n * validity of the version.\n */\nconst getCoreVersion = () => {\n  const latestVersion = \"1.3.24\";\n\n  if (process.env[SWC_CLI_ENV.SWCX_CORE_VERSION_OVERRIDE]) {\n    console.log(\n      `Using swc core version from ${SWC_CLI_ENV.SWCX_CORE_VERSION_OVERRIDE} env variable`\n    );\n    return `${process.env[SWC_CLI_ENV.SWCX_CORE_VERSION_OVERRIDE]}`;\n  }\n\n  try {\n    if (!process.env[SWC_CLI_ENV.SWCX_SKIP_CORE_VERSION_CHECK]) {\n      const cwdPackageManifestPath = path.resolve(\n        process.cwd(),\n        \"package.json\"\n      );\n      if (existsSync(cwdPackageManifestPath)) {\n        const {\n          dependencies,\n          devDependencies,\n        } = require(cwdPackageManifestPath);\n        const swcCoreVersion =\n          dependencies[\"@swc/core\"] || devDependencies[\"@swc/core\"];\n        if (swcCoreVersion) {\n          return minVersion(swcCoreVersion);\n        }\n      } else {\n        return latestVersion;\n      }\n    } else {\n      console.log(\n        `Skipping swc core version check due to ${SWC_CLI_ENV.SWCX_SKIP_CORE_VERSION_CHECK} env variable`\n      );\n    }\n  } catch (e) {\n    console.warn(\n      `Failed to determine swc core version from package.json, using latest available version ${latestVersion} instead`,\n      e\n    );\n  }\n\n  return latestVersion;\n};\n\nconst isMusl = () =>\n  (() => {\n    function isMusl() {\n      if (!process.report || typeof process.report.getReport !== \"function\") {\n        try {\n          return readFileSync(\"/usr/bin/ldd\", \"utf8\").includes(\"musl\");\n        } catch (e) {\n          return true;\n        }\n      } else {\n        const { glibcVersionRuntime } = (process.report.getReport() as any)\n          .header;\n        return !glibcVersionRuntime;\n      }\n    }\n\n    return isMusl();\n  })();\n\nconst getBinaryName = () => {\n  const platformBinaryMap: Record<string, Partial<Record<string, string>>> = {\n    win32: {\n      x64: \"swc-win32-x64-msvc.exe\",\n      ia32: \"swc-win32-ia32-msvc.exe\",\n      arm64: \"swc-win32-arm64-msvc.exe\",\n    },\n    darwin: {\n      x64: \"swc-darwin-x64\",\n      arm64: \"swc-darwin-arm64\",\n    },\n    linux: {\n      x64: `swc-linux-x64-${isMusl() ? \"musl\" : \"gnu\"}`,\n      arm64: `swc-linux-arm64-${isMusl() ? \"musl\" : \"gnu\"}`,\n      arm: \"swc-linux-arm64-gnu\",\n    },\n  };\n\n  const binaryName = platformBinaryMap[platform][arch];\n\n  if (!binaryName) {\n    throw new Error(\n      `Unsupported platform: binary ${binaryName} for '${platform} ${arch}' is not available`\n    );\n  }\n\n  return binaryName;\n};\n\nconst executeBinary = async () => {\n  const coreVersion = getCoreVersion();\n  const releaseBase = `https://github.com/swc-project/swc/releases/download/v${coreVersion}`;\n  const binaryName = getBinaryName();\n\n  const bin = new BinWrapper({\n    // do not explicitly run the binary to check existence to avoid\n    // redundant spawn\n    skipCheck: true,\n  })\n    .src(`${releaseBase}/${binaryName}`, platform, arch)\n    .dest(`node_modules/.bin/swc-cli-${coreVersion}`)\n    .use(binaryName);\n\n  await bin.run();\n\n  const binPath = bin.path();\n\n  const [, , ...args] = process.argv;\n  const options = { cwd: process.cwd(), stdio: \"inherit\" as StdioOptions };\n\n  return spawn(binPath, args, options);\n};\n\nexecuteBinary().catch(e => console.error(e));\n"],"names":["path","BinWrapper","require","platform","arch","process","SWC_CLI_ENV","SWCX_CORE_VERSION_OVERRIDE","SWCX_SKIP_CORE_VERSION_CHECK","getCoreVersion","latestVersion","env","console","log","cwdPackageManifestPath","resolve","cwd","existsSync","dependencies","devDependencies","swcCoreVersion","minVersion","e","warn","isMusl","report","getReport","readFileSync","includes","glibcVersionRuntime","header","getBinaryName","platformBinaryMap","win32","x64","ia32","arm64","darwin","linux","arm","binaryName","Error","executeBinary","coreVersion","releaseBase","bin","skipCheck","src","dest","use","run","binPath","args","argv","options","stdio","spawn","catch","error"],"mappings":"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"}